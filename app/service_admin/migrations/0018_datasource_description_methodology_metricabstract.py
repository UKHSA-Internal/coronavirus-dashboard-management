# Generated by Django 3.1.7 on 2021-03-05 10:04

from django.db import migrations, models
import django.db.models.deletion
import service_admin.models.fields
import service_admin.utils.default_generators


class Migration(migrations.Migration):

    dependencies = [
        ('service_admin', '0017_auto_20210305_0950'),
    ]

    operations = [
        migrations.RunSQL(
            "SET LOCAL citus.multi_shard_modify_mode TO 'sequential';"
        ),
        migrations.CreateModel(
            name='MetricAbstract',
            fields=[
                ('id', service_admin.models.fields.VarCharField(default=service_admin.utils.default_generators.generate_unique_id, max_length=36, primary_key=True, serialize=False, verbose_name='unique ID')),
                ('label', service_admin.models.fields.VarCharField(max_length=255)),
                ('abstract', models.TextField()),
                ('metric', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='metric_abstract', to='service_admin.metricreference')),
            ],
            options={
                'db_table': 'covid19"."metric_abstract',
            },
        ),
        migrations.RunSQL(
            "SELECT create_reference_table('covid19.metric_abstract')"
        ),
        migrations.CreateModel(
            name='Methodology',
            fields=[
                ('id', service_admin.models.fields.VarCharField(default=service_admin.utils.default_generators.generate_unique_id, max_length=36, primary_key=True, serialize=False, verbose_name='unique ID')),
                ('label', service_admin.models.fields.VarCharField(max_length=255)),
                ('methodology', models.TextField()),
                ('metric', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='metric_methodology', to='service_admin.metricreference')),
            ],
            options={
                'verbose_name_plural': 'Methodologies',
                'db_table': 'covid19"."metric_methodology',
            },
        ),
        migrations.RunSQL(
            "SELECT create_distributed_table('covid19.metric_methodology', 'id')"
        ),
        migrations.CreateModel(
            name='Description',
            fields=[
                ('id', service_admin.models.fields.VarCharField(default=service_admin.utils.default_generators.generate_unique_id, max_length=36, primary_key=True, serialize=False, verbose_name='unique ID')),
                ('label', service_admin.models.fields.VarCharField(max_length=255)),
                ('description', models.TextField()),
                ('metric', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='metric_description', to='service_admin.metricreference')),
            ],
            options={
                'db_table': 'covid19"."metric_description',
            },
        ),
        migrations.RunSQL(
            "SELECT create_distributed_table('covid19.metric_description', 'id')"
        ),
        migrations.CreateModel(
            name='DataSource',
            fields=[
                ('id', service_admin.models.fields.VarCharField(default=service_admin.utils.default_generators.generate_unique_id, max_length=36, primary_key=True, serialize=False, verbose_name='unique ID')),
                ('label', service_admin.models.fields.VarCharField(max_length=255)),
                ('source', models.TextField()),
                ('applicable_to', models.ForeignKey(limit_choices_to={'area_type__in': ['overview', 'nation']}, on_delete=django.db.models.deletion.CASCADE, related_name='metric_source_for_area', to='service_admin.areareference')),
                ('metric', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='metric_sources', to='service_admin.metricreference')),
            ],
            options={
                'db_table': 'covid19"."metric_data_source',
            },
        ),
        migrations.RunSQL(
            "SELECT create_distributed_table('covid19.metric_data_source', 'id')"
        ),
        migrations.RunSQL(
            "SET LOCAL citus.multi_shard_modify_mode TO 'parallel';"
        ),
    ]
