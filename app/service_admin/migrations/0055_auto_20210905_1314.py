# Generated by Django 3.2.5 on 2021-09-05 13:14

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    dependencies = [
        ('service_admin', '0054_auto_20210904_0936'),
    ]

    operations = [
        migrations.CreateModel(
            name='TabMetric',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='unique ID')),
                ('label', models.CharField(db_index=True, max_length=40)),
                ('tooltip', models.CharField(max_length=255, null=True)),
                ('colour', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='service_admin.colour')),
                ('value', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='service_admin.metricreference', to_field='metric')),
            ],
            options={
                'verbose_name': 'tab metric',
                'db_table': 'cms"."tab_metric',
            },
        ),
        migrations.RunSQL(
            "SELECT create_reference_table('cms.tab_metric')"
        ),
        migrations.RemoveField(
            model_name='tabulationfield',
            name='label',
        ),
        migrations.RemoveField(
            model_name='tabulationfield',
            name='tooltip',
        ),
        migrations.RemoveField(
            model_name='tabulationfield',
            name='value',
        ),
        migrations.RemoveField(
            model_name='visualisationfield',
            name='colour',
        ),
        migrations.RemoveField(
            model_name='visualisationfield',
            name='label',
        ),
        migrations.RemoveField(
            model_name='visualisationfield',
            name='tooltip',
        ),
        migrations.RemoveField(
            model_name='visualisationfield',
            name='value',
        ),
        migrations.AddField(
            model_name='card',
            name='published',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='tabfield',
            name='published',
            field=models.BooleanField(default=False),
        ),
        migrations.AlterField(
            model_name='rollingaverage',
            name='clip_end',
            field=models.PositiveSmallIntegerField(help_text='Number of points to exclude from the end (offset) - range: [0, 10]', null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)]),
        ),
        migrations.AlterField(
            model_name='tab',
            name='fields',
            field=models.ManyToManyField(db_table='cms"."tab_to_tab_fields', related_name='fields_of', to='service_admin.TabField', verbose_name='tab fields'),
        ),
        migrations.AddField(
            model_name='tabulationfield',
            name='metrics',
            field=models.ManyToManyField(db_table='cms"."tabulation_metrics', related_name='table_of_metric', to='service_admin.TabMetric'),
        ),
        migrations.RunSQL(
            "SELECT create_reference_table('cms.tabulation_metrics')"
        ),
        migrations.AddField(
            model_name='visualisationfield',
            name='metrics',
            field=models.ManyToManyField(db_table='cms"."visualisation_metrics', related_name='visualisation_of_metric', to='service_admin.TabMetric'),
        ),
        migrations.RunSQL(
            "SELECT create_reference_table('cms.visualisation_metrics')"
        ),
    ]
